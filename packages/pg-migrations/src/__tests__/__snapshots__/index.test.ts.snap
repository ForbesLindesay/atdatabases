// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`apply - after already appying: stderr 1`] = `""`;

exports[`apply - after already appying: stdout 1`] = `
"No migrations required
"
`;

exports[`apply - missing directory: stderr 1`] = `
"You must supply a directory path for your migrations. You can supply it as either:

 - The [36mmigrationsDirectory[39m config value using @databases/pg-config
 - The [36m--directory[39m paramter when calling @databases/pg-migrations

"
`;

exports[`apply - missing directory: stdout 1`] = `""`;

exports[`apply --dry-run - after already appying: stderr 1`] = `""`;

exports[`apply --dry-run - after already appying: stdout 1`] = `
"No migrations required
"
`;

exports[`apply --dry-run: stderr 1`] = `
"This database has not been migrated using @databases/pg-migrations version [36m2.0.0[39m before.
Version updates cannot be automaticaly applied when --dry-run is enabled.
"
`;

exports[`apply --dry-run: stdout 1`] = `
"To update your database, run again without --dry-run
"
`;

exports[`apply: stderr 1`] = `""`;

exports[`apply: stdout 1`] = `
"[36mApplying[39m 00001-init.ts
[32mApplied[39m 00001-init.ts
[36mApplying[39m 00002-update.ts
[32mApplied[39m 00002-update.ts
[36mApplying[39m 00003-update2.sql
[32mApplied[39m 00003-update2.sql
3 migrations applied
"
`;

exports[`help apply: stderr 1`] = `""`;

exports[`help apply: stdout 1`] = `
"[36mApply Migrations[39m

Usage: pg-migrations apply [options]

Parameters:
-c --database         A connection string for the database you want to connect to (can also be supplied as the environment variable PG_URL).
-D --directory        The directory containing migrations (can also be supplied via the \\"migrationsDirectory\\" config option).
   --version-table    A table to store the version of @databases used. Defaults to \\"atdatabases_migrations_version\\".
   --migrations-table A table to store the applied migrations. Defaults to \\"atdatabases_migrations_applied\\".
-e --ignore-error     Error code to ignore (can use multiple times to ignore multiple errors)
-d --dry-run          Do actually modify the database or file system.
"
`;

exports[`help: stderr 1`] = `""`;

exports[`help: stdout 1`] = `
"Available commands:

pg-migrations apply           - Apply any pending migration
pg-migrations ignore-error    - Permanently ignore an error for a migration
pg-migrations mark-applied    - Mark migration as applied (without applying it)
pg-migrations mark-unapplied  - Mark migration as unapplied (without reverting it)
pg-migrations restore-from-db - Restore a previously applied migration from the database

For more information on a command, run:

pg-migrations help <COMMAND_NAME>
"
`;
